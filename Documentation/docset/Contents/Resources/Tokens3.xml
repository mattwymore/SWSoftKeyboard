<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SWSoftKeyboardKeyCell.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SWSoftKeyboardKeyCell</TokenIdentifier>
			<Abstract type="html">A SWSoftKeyboardKeyCell is an NSButtonCell that belongs to an SWSoftKeyboard.</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
            
			
			<NodeRef refid="3"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/setKeyDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate to receive messages about this key</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;SWKeyDelegate&gt; keyDelegate</Declaration>
			
			
			<Anchor>//api/name/keyDelegate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/keyDelegate</TokenIdentifier>
			<Abstract type="html">The delegate to receive messages about this key</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;SWKeyDelegate&gt; keyDelegate</Declaration>
			
			
			<Anchor>//api/name/keyDelegate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/keyDelegate</TokenIdentifier>
			<Abstract type="html">The delegate to receive messages about this key</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;SWKeyDelegate&gt; keyDelegate</Declaration>
			
			
			<Anchor>//api/name/keyDelegate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/setIsSelected:</TokenIdentifier>
			<Abstract type="html">Whether or not this key is selected</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isSelected</Declaration>
			
			
			<Anchor>//api/name/isSelected</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/isSelected</TokenIdentifier>
			<Abstract type="html">Whether or not this key is selected</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isSelected</Declaration>
			
			
			<Anchor>//api/name/isSelected</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/isSelected</TokenIdentifier>
			<Abstract type="html">Whether or not this key is selected</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL isSelected</Declaration>
			
			
			<Anchor>//api/name/isSelected</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/setKeyType:</TokenIdentifier>
			<Abstract type="html">The type of key.</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) SKKeyType keyType</Declaration>
			
			
			<Anchor>//api/name/keyType</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/keyType</TokenIdentifier>
			<Abstract type="html">The type of key.</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) SKKeyType keyType</Declaration>
			
			
			<Anchor>//api/name/keyType</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/keyType</TokenIdentifier>
			<Abstract type="html">The type of key.</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) SKKeyType keyType</Declaration>
			
			
			<Anchor>//api/name/keyType</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/setControlType:</TokenIdentifier>
			<Abstract type="html">The control type this key holds (if its keyType is SKKeyTypeControl)</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) SKControlType controlType</Declaration>
			
			
			<Anchor>//api/name/controlType</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/controlType</TokenIdentifier>
			<Abstract type="html">The control type this key holds (if its keyType is SKKeyTypeControl)</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) SKControlType controlType</Declaration>
			
			
			<Anchor>//api/name/controlType</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/controlType</TokenIdentifier>
			<Abstract type="html">The control type this key holds (if its keyType is SKKeyTypeControl)</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) SKControlType controlType</Declaration>
			
			
			<Anchor>//api/name/controlType</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/setStateLabels:</TokenIdentifier>
			<Abstract type="html">The labels this key uses for certain keyboard/selected states.</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary *stateLabels</Declaration>
			
			
			<Anchor>//api/name/stateLabels</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/stateLabels</TokenIdentifier>
			<Abstract type="html">The labels this key uses for certain keyboard/selected states.</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary *stateLabels</Declaration>
			
			
			<Anchor>//api/name/stateLabels</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/stateLabels</TokenIdentifier>
			<Abstract type="html">The labels this key uses for certain keyboard/selected states.</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSDictionary *stateLabels</Declaration>
			
			
			<Anchor>//api/name/stateLabels</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/setStateValues:</TokenIdentifier>
			<Abstract type="html">The values this key sends in certain keyboard/selected states</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/stateLabels</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, strong) NSDictionary *stateValues</Declaration>
			
			
			<Anchor>//api/name/stateValues</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/stateValues</TokenIdentifier>
			<Abstract type="html">The values this key sends in certain keyboard/selected states</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/stateLabels</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, strong) NSDictionary *stateValues</Declaration>
			
			
			<Anchor>//api/name/stateValues</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/stateValues</TokenIdentifier>
			<Abstract type="html">The values this key sends in certain keyboard/selected states</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/stateLabels</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, strong) NSDictionary *stateValues</Declaration>
			
			
			<Anchor>//api/name/stateValues</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/initWithStateLabels:stateValues:keyType:controlType:</TokenIdentifier>
			<Abstract type="html">Initializes a new key with particular attributes</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>- (id)initWithStateLabels:(NSDictionary *)stateLabels stateValues:(NSDictionary *)stateValues keyType:(SKKeyType)keyType controlType:(SKControlType)controlType</Declaration>
			<Parameters>
				<Parameter>
					<Name>stateLabels</Name>
					<Abstract type="html">A dictionary of labels corresponding to specific keyboard/selected states</Abstract>
				</Parameter><Parameter>
					<Name>stateValues</Name>
					<Abstract type="html">A dictionary of values corresponding to specific keyboard/selected states</Abstract>
				</Parameter><Parameter>
					<Name>keyType</Name>
					<Abstract type="html">The type of key</Abstract>
				</Parameter><Parameter>
					<Name>controlType</Name>
					<Abstract type="html">The type of control the key holds (if it&apos;s a control key)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithStateLabels:stateValues:keyType:controlType:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/initWithFrame:stateLabels:stateValues:keyType:controlType:keyDelegate:</TokenIdentifier>
			<Abstract type="html">Initializes a new key with particular attributes</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>- (id)initWithFrame:(NSRect)frame stateLabels:(NSDictionary *)stateLabels stateValues:(NSDictionary *)stateValues keyType:(SKKeyType)keyType controlType:(SKControlType)controlType keyDelegate:(id&lt;SWKeyDelegate&gt;)keyDelegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>frame</Name>
					<Abstract type="html">The key&apos;s frame</Abstract>
				</Parameter><Parameter>
					<Name>stateLabels</Name>
					<Abstract type="html">A dictionary of labels corresponding to specific keyboard/selected states</Abstract>
				</Parameter><Parameter>
					<Name>stateValues</Name>
					<Abstract type="html">A dictionary of values corresponding to specific keyboard/selected states</Abstract>
				</Parameter><Parameter>
					<Name>keyType</Name>
					<Abstract type="html">The type of key</Abstract>
				</Parameter><Parameter>
					<Name>controlType</Name>
					<Abstract type="html">The type of control the key holds (if it&apos;s a control key)</Abstract>
				</Parameter><Parameter>
					<Name>keyDelegate</Name>
					<Abstract type="html">The key&apos;s delegate</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithFrame:stateLabels:stateValues:keyType:controlType:keyDelegate:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/labelForKeyboardState:</TokenIdentifier>
			<Abstract type="html">Returns the label for a particular keyboard state, taking into account the key&apos;s selected state</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/stateLabels</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (NSView *)labelForKeyboardState:(int)keyboardState</Declaration>
			<Parameters>
				<Parameter>
					<Name>keyboardState</Name>
					<Abstract type="html">The keyboard&apos;s layout state</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The cell&apos;s view</Abstract></ReturnValue>
			<Anchor>//api/name/labelForKeyboardState:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/valueForKeyboardState:</TokenIdentifier>
			<Abstract type="html">Returns the key&apos;s value for a particular keyboard state and key selected state.</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/SWSoftKeyboardKeyCell/stateLabels</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (NSString *)valueForKeyboardState:(int)keyboardState</Declaration>
			<Parameters>
				<Parameter>
					<Name>keyboardState</Name>
					<Abstract type="html">The keyboard&apos;s layout state</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the key value</Abstract></ReturnValue>
			<Anchor>//api/name/valueForKeyboardState:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SWSoftKeyboardKeyCell/updateForKeyboardState:</TokenIdentifier>
			<Abstract type="html">Updates the cell&apos;s look to match a keyboard state and the key&apos;s selected state.</Abstract>
			<DeclaredIn>SWSoftKeyboardKeyCell.h</DeclaredIn>
			
			<Declaration>- (void)updateForKeyboardState:(int)keyboardState</Declaration>
			<Parameters>
				<Parameter>
					<Name>keyboardState</Name>
					<Abstract type="html">The keyboard&apos;s layout state</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateForKeyboardState:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
        
        
	</File>
</Tokens>